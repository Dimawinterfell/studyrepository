from tkinter import * # sighn * mean ALL tkinter это библиотека находится в Пайтоне по умолчанию
# и импортирует все функции и классы библиотеки
from random import randint #имортируем из модуля рандом функцию рандинт
from random import shuffle, choice # shuffle перемешивает символы внутри массива а choice выбирает какойто один символ рандомно
# root = Tk()                      #sozdaem okno. Tk-konstruktor klassa i okno
# print(root)
# print(type(root))
# Получится на экране :
#.(точка)
#<class 'tkinter.Tk'>

root = Tk() # Tk это класс который конструирует обьекты(в данный момент окна)создает обьект окна
root.geometry('500x300') # Создаем обьект(окошко) потом его описываем, (задает свойства окна)
# Описываем функцию при нажатии на кнопку
def generatePassword():
	# pswrd = randint(0, 10000000000)
	# passwordText.config(text=pswrd) # Получился генератор чисел
	# Создадим супернадёжный пароль
	numbers = '1234567890' #сначала создаем переменную с числами от 1 до 0
	string = 'qwertyuiopasdfghjklzxcvbnm'# потом с буквами  на клавиатуре
	symbols = '@#!%^&*()}{'# потом с символами
	stringUpper = string.upper()# потом строку стринг и с помощью функции upper делаем большие или малентькие буквы

	allSymbols = numbers+string+symbols+stringUpper# и с помощью allSymbols конкатенацией создаем одну строку
	ls=list(allSymbols) # обьединение в массив с разделителями
	# такой пароль сломать будет ооочень сложно
	# потом из этих символов делаем массив
	shuffle(ls) # перемешивает символы внутри массива
	psw = ''.join(choice(ls)for x in range(20))  #в переменной пассворд сохранится 20 символов через + то есть склеятся функция range создает из 20 символов
# с помощью функции join склеиваем без разделителя благодаря пустоте ''
	#pswArray = '' #  сохранится 20 рандомных значений
# range(20) создает массив из чисел от 0 до 20 (без 20 включительно т.е 0-19)
# цикл фор выполнится 20 раз - for x in range(20)
	# for x in range(20):
	# 	data = choice(ls) #выбрать из массива рандомное значение а цикл фор желает это 20 раз
	# 	pswArray=pswArray+str(data)
	# g = open('psw.txt','a')# открытие файла psw.txt  'a' означает запись, если файла нет то создаёт
	# g.write(psw+'\n')
	# g.close()
	# pswArray = str(pswArray) # Приводим к строке
	passwordText.config(text=psw)



# если внутри цикла происходит одно действие то мы можем записать в одну строчку



# Текстовые данные и их оформление внутри окон:


# Теперь нарисуем лейбл
# Так ка мы пишем генератор паролей
passwordText = Label(root, text='Click button for generate password') # Первый аргумент это в каком окне отрисуем,
# второй аргумент что отрисуем
passwordText.config(font=('Tahoma',25,'underline'))
# Мы конфигурируем наш будущий текст
# Фонт означает какой тип шрифта будет, Тахома( не факт что будет на линуксе, может написать что нету или заменить на обычный. Arial есть везде)
 # название шрифта Tahoma
# число 25 размер шрифта a underline - означает подчеркнутый
passwordText.pack() # вызываем на окне метод pack

# Теперь прикрутим (создадим) кнопку:


# Кнопка
button = Button(root,text= 'generate PASSWORD') #Создает обьект типа кнопка
button.config(width=20, height=5, bg='purple', fg='white', command=generatePassword )   #Длинну высоту задаем, цвет фона и кнопку
# переменная аргумента command мы ей скармливаем этот какая функция будет срабатывать при нажатии на кнопку
# bg это цвет кнопки
# fg это цвет  текста на кнопке
button.pack() # Отрисовываем на окне кнопку. Т.е. сначала создаем обьект, создаем ему конфиги
# и только после команды pack его отрисовываем
# мы отрисовали кнопку но она ничег оне делает, она просто есть
# поетому мы на нажатие кнопки повесим обработчик
# допустим чт обы при нажатии кнопки у нас запускалась какая нибуть функция
# естественно она заранее должна быть обьявлена:
#  это строка 15: def generatePassword():









root.mainloop() # отрисовывает окно должно быть в самом низу, ибо отрисовывет общее окно











# pip - репозиторий с библиотеками кода(хранилищие, банк синонимы, репозиторий это по программистски)
# install - установить
# tkinter - название библиотеки
# pip install tkinter